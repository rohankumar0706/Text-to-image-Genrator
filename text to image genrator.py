# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uH9FJtG8I4wK-zF74FUSDvN6CWp8-QI-
"""
s"

# Enhanced Text-to-Image Generator
from diffusers import StableDiffusionPipeline
import torch
from IPython.display import Image, display

# Load model (this will download files as shown in your notebook)
model_id = "runwayml/stable-diffusion-v1-5"
pipe = StableDiffusionPipeline.from_pretrained(model_id, torch_dtype=torch.float16)
pipe = pipe.to("cuda")

def generate_image(
    prompt,
    negative_prompt=None,
    steps=50,
    guidance_scale=7.5,
    width=512,
    height=512,
    seed=None
):
    # Set seed if provided
    if seed is not None:
        generator = torch.Generator("cuda").manual_seed(seed)
    else:
        generator = None

    # Generate image
    image = pipe(
        prompt,
        negative_prompt=negative_prompt,
        num_inference_steps=steps,
        guidance_scale=guidance_scale,
        width=width,
        height=height,
        generator=generator
    ).images[0]

    # Save and return
    filename = "generated_image.png"
    image.save(filename)
    return image

# Get user input
print("Stable Diffusion Text-to-Image Generator")
prompt = input("Enter your prompt: ")
negative_prompt = input("Enter negative prompt (things you don't want in the image, press Enter to skip): ")
steps = int(input("Number of steps (20-100, default 50): ") or 50)
guidance = float(input("Guidance scale (1-20, default 7.5): ") or 7.5)

# Generate and display
print("Generating image...")
img = generate_image(
    prompt,
    negative_prompt=negative_prompt if negative_prompt else None,
    steps=steps,
    guidance_scale=guidance
)

display(img)
print("Image saved as 'generated_image.png'")
